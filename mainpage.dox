/*!
 * \mainpage NS 
 *# Network Simulator
 *
 *This page features a short description of the program. There's a more complete follow through in the related pages (named 'Network Simulator').
 *
 *---
 *
 *## Description
 *
 *Simulates packets travelling in a network. The simulated network can be layed out with specific coordinates and attributes or generated randomly with given parameters. In both cases the running visualization highlights the links (or edges) in green that have packets travelling through them. Mode switch changes this to highlight the peaking traffic in the network in red as the queues fill up at the receiving nodes.
 *
 *Nodes serve as platforms for connections and applications, which can be stacked into the somewhat freely. These applications have preset properties which in order execute the handling of incoming and outgoing packets. They are labeled with distinct labels, which simultaneously serve as their addresses.
 *
 *Packets are very basic packets and are generated by a specific kind of an application, the PacketGenerator.
 *
 *XML is used to define specific network layouts for the programs. The relative link should be given as an argument when launching the program. Read 'Usage' part for detailed instructions for how to write xml. Few test layouts have been provided for use in the 'resources' folder.
 *
 *Random generation is triggered with arguments and the instructions are included in the 'Usage' part of this page.
 *
 *The implementation of the program runs concurrently and enables parallelism. This enables it to generate quite large networks and calculate f.ex. shortest paths routing for them - which is the default routing algorithm used at the moment. The shortest path algorithm in use calculates progressively the shortest routes for all nodes thus redirecting the traffic as the program clock runs.
 *
 *Individual shortest paths can be highlighted by clicking on the nodes. This will also highlight the link weights.
 *
 *The gui is handled mainly with the keyboard. Keymap is shown at the bottom.
 *
 *
 *
 */
